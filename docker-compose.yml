# Run `docker-compose build` to build an image for api and workers containers.
# Run `docker-compose up` to run all containers.

version: "3.4"

volumes:
  postgres_data:

services:
  postgres: #docker run --name postgres -p 5432:5432 -e POSTGRES_PASSWORD=mysecretpassword -e POSTGRES_USER=postgres -d postgres
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=mysecretpassword
      -
  api: # server/advanced server
    build: .
    ports:
      - 8000:8000
      - 8020:8020
    volumes:
      - ./data:/data
    restart: on-failure
    command: python server/main_mq.py
    depends_on:
      - postgres
      - rabbitmq

  rabbitmq: # docker run -d --hostname my-rabbit --name some-rabbit -p 15672:15672 -p 5672:5672 rabbitmq:management
    image: rabbitmq:latest
    expose:
      - 5672
    ports:
      - 15672:15672
    restart: on-failure

  workers:
    build: .
    command: python chess/mq_reader.py
    restart: on-failure
    volumes:
      - ./data:/data
    depends_on:
      - postgres
      - rabbitmq
